services:
  ipfs:
    image: ipfs/go-ipfs:v0.10.0
    ports:
      - '5001:5001'
      - '8080:8080'
    command: ["daemon", "--init", "--migrate=true"]
    volumes:
      - ./data/ipfs:/data/ipfs

  postgres:
    image: postgres:12
    environment:
      POSTGRES_PASSWORD: letmein
      POSTGRES_USER: graph-node
      POSTGRES_DB: graph-node
      POSTGRES_INITDB_ARGS: "--locale=C --encoding=UTF8"
      LC_ALL: C
    ports:
      - '5432:5432'
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    command: 
      - "postgres"
      - "-cshared_preload_libraries=pg_stat_statements"
      - "-clisten_addresses=*"

  graph-node:
    image: graphprotocol/graph-node:latest
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: letmein
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      # HTTP with maximum optimizations
      ethereum: 'localhost:http://host.docker.internal:8545'
      # MAXIMUM PERFORMANCE OPTIMIZATIONS
      ETHEREUM_RPC_MAX_PARALLEL_REQUESTS: '200'
      ETHEREUM_BLOCK_BATCH_SIZE: '100'
      ETHEREUM_BLOCK_RANGE_SIZE: '2000'
      GRAPH_ETHEREUM_CLEANUP_BLOCKS: 'true'
      GRAPH_ETHEREUM_BLOCK_BATCH_SIZE: '100'
      GRAPH_ETHEREUM_MAX_BATCH_REQUESTS: '100'
      GRAPH_ETHEREUM_REQUEST_RETRY_COUNT: '3'
      GRAPH_ETHEREUM_TARGET_TRIGGERS_PER_BLOCK_RANGE: '100'
      # Logging
      GRAPH_LOG: info
    depends_on:
      - postgres
      - ipfs
    extra_hosts:
      - "host.docker.internal:host-gateway"