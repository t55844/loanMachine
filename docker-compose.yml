version: '3.7'

services:
  #--- 1. BLOCKCHAIN ---
  # Runs a local Hardhat blockchain node
  hardhat-node:
    build:
      context: ./hardhat # Path to your Hardhat project
      dockerfile: Dockerfile
    ports:
      - '8545:8545' # Expose port for Metamask/frontend
    volumes:
      # Mounts your scripts folder so the 'deploy' command works
      - ./hardhat/scripts:/app/scripts
      # Mounts the file that 'deploy.js' creates
      - ./hardhat/deployment-addresses.json:/app/deployment-addresses.json

  #--- 2. FRONTEND ---
  # Runs your React app using Nginx
  frontend:
    build:
      context: ./frontend # Path to your React app
      dockerfile: Dockerfile
    ports:
      - '3000:80' # Access your app at http://localhost:3000
    depends_on:
      - graph-node

  #--- 3. GRAPHQL (The Graph) ---
  # (Your original config, with 2 minor changes)
  ipfs:
    image: ipfs/go-ipfs:v0.10.0
    ports:
      - '5001:5001'
      - '8080:8080'
    command: ["daemon", "--init", "--migrate=true"]
    volumes:
      - ./data/ipfs:/data/ipfs

  postgres:
    image: postgres:12
    environment:
      POSTGRES_PASSWORD: letmein
      POSTGRES_USER: graph-node
      POSTGRES_DB: graph-node
      POSTGRES_INITDB_ARGS: "--locale=C --encoding=UTF8"
      LC_ALL: C
    ports:
      - '5432:5432'
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    command: 
      - "postgres"
      - "-cshared_preload_libraries=pg_stat_statements"
      - "-clisten_addresses=*"

  graph-node:
    image: graphprotocol/graph-node:latest
    ports:
      - '8000:8000' # GraphQL API endpoint
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: letmein
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      # --- IMPORTANT CHANGE ---
      # Connects to the 'hardhat-node' container, not the host machine
      ethereum: 'local:http://hardhat-node:8545'
      # (Your optimizations are kept)
      ETHEREUM_RPC_MAX_PARALLEL_REQUESTS: '200'
      ETHEREUM_BLOCK_BATCH_SIZE: '100'
      # ... (rest of your env vars)
      GRAPH_LOG: info
    depends_on:
      - postgres
      - ipfs
      - hardhat-node # <-- IMPORTANT: Waits for blockchain to be ready